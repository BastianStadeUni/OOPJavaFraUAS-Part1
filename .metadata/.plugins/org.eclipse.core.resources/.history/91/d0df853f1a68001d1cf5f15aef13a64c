
class Bicycle implements Cloneable {        
    // the Bicycle class has
    // three fields
    public int cadence;
    public int gear;
    public int speed;
        
    // the Bicycle class has
    // one constructor
    public Bicycle(int startCadence, int startSpeed, int startGear) {
        gear = startGear;
        cadence = startCadence;
        speed = startSpeed;
    }
        
    // the Bicycle class has
    // four methods
    public void setCadence(int newValue) {
        cadence = newValue;
    }
        
    public void setGear(int newValue) {
        gear = newValue;
    }
        
    public void applyBrake(int decrement) {
        speed -= decrement;
    }
        
    public void speedUp(int increment) {
        speed += increment;
    }   
    public void printDescription(){
        System.out.println("\nBike is " + "in gear " + this.gear
            + " with a cadence of " + this.cadence +
            " and travelling at a speed of " + this.speed + ". ");
    }
    protected Object clone() throws CloneNotSupportedException {
    	return super.clone();
    }
    public String toString() {
    	return "gear: " + this.gear + " cadence: " + this.cadence + " speed: " + this.speed;
    }
}

class MountainBike extends Bicycle {
    private String suspension;

    public MountainBike(
               int startCadence,
               int startSpeed,
               int startGear,
               String suspensionType){
        super(startCadence,
              startSpeed,
              startGear);
        this.setSuspension(suspensionType);
    }

    public String getSuspension(){
      return this.suspension;
    }

    public void setSuspension(String suspensionType) {
        this.suspension = suspensionType;
    }

    public void printDescription() {
        super.printDescription();
        System.out.println("The " + "MountainBike has a" +
            getSuspension() + " suspension.");
    }
} 

class RoadBike extends Bicycle{
    // In millimeters (mm)
    private int tireWidth;

    public RoadBike(int startCadence,
                    int startSpeed,
                    int startGear,
                    int newTireWidth){
        super(startCadence,
              startSpeed,
              startGear);
        this.setTireWidth(newTireWidth);
    }

    public int getTireWidth(){
      return this.tireWidth;
    }

    public void setTireWidth(int newTireWidth){
        this.tireWidth = newTireWidth;
    }

    public void printDescription(){
        super.printDescription();
        System.out.println("The RoadBike" + " has " + getTireWidth() +
            " MM tires.");
    }
}

public class TestBikes {
	  public static void main(String[] args) throws CloneNotSupportedException{
	    Bicycle bike01, bike02, bike03;

	    bike01 = new Bicycle(20, 10, 1);
	    bike02 = new MountainBike(20, 10, 5, "Dual");
	    bike03 = new RoadBike(40, 20, 8, 23);

	    bike01.printDescription();
	    bike02.printDescription();
	    bike03.printDescription();
	    Bicycle b4 = (Bicycle)bike01.clone();
	    b4.printDescription();
	    System.out.println("is b4 equal to bike01? " + b4.equals(bike01));
	    System.out.println("Class of bike01: "+bike01.getClass());
	    System.out.println("Hashcode of bike01: "+bike01.hashCode());
	    System.out.println("String of bike01: "+bike01.toString());
	    
	    System.out.println("Is bike01 an instance of Bicycle? " + (bike01 instanceof Bicycle));
	    System.out.println("Is bike01 an instance of MountainBike? " + (bike01 instanceof MountainBike));
	    
	  }
	}
